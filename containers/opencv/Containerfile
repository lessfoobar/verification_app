# -------------------------------
# Stage 1: Builder
# -------------------------------
FROM quay.io/fedora/fedora:latest as builder

LABEL stage=builder

# Install build dependencies and runtime Python libraries
RUN dnf update -y && \
    dnf install -y \
        python3 \
        python3-pip \
        python3-devel \
        gcc \
        gcc-c++ \
        cmake \
        pkg-config \
        opencv \
        opencv-devel \
        python3-opencv \
        python3-numpy \
        curl \
        wget \
        unzip \
        libgomp \
        glib2-devel

# Create working directories
WORKDIR /app

# Copy requirements and install Python packages
COPY requirements.txt .
RUN pip3 install --no-cache-dir --upgrade pip setuptools wheel && \
    pip3 install --no-cache-dir -r requirements.txt

# Copy application files
COPY --chown=opencv-service:opencv-service --chmod=500 *.py ./

# Create and run model test script
RUN python3 test_models.py

# -------------------------------
# Stage 2: Runtime
# -------------------------------
FROM quay.io/fedora/fedora:latest

# Metadata
LABEL maintainer="verification-service@example.com"
LABEL description="Production Face Detection + Liveness Verification Service"

# Install runtime dependencies only
RUN dnf update -y && \
    dnf install -y \
        python3 \
        python3-pip \
        opencv \
        python3-opencv \
        python3-numpy \
        libgomp \
        curl \
        glib2 && \
    dnf clean all

# Create non-root user and app directory
RUN useradd -r -s /bin/false opencv-service && \
    mkdir -p /app && \
    chown -R opencv-service:opencv-service /app

WORKDIR /app

# Copy only needed artifacts from builder
COPY --from=builder /app /app

# Ensure ownership
RUN chown -R opencv-service:opencv-service /app

# Switch to non-root user
USER opencv-service

# Set environment variables
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV GLOG_minloglevel=2
ENV OMP_NUM_THREADS=4

# Expose port
EXPOSE 8002

# Run app
CMD ["python3", "face_detection.py"]